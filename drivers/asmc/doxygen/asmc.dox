/*!
@defgroup asmc ASMC: Auxiliary System Mode Controller Driver
@details The KSDK provides a Peripheral driver for the Auxiliary System Mode Controller (ASMC) module of
Kinetis devices. The ASMC module is responsible for sequencing Core 1 into and out of all
low-power Stop and Run modes. The ASMC (Auxiliary System Mode Control) provides status and control 
registers for Core 1.

API functions are provided for configuring the system working in a dedicated power mode. For
different power modes, function `ASMC_SetPowerModexxx` accepts different parameters. System power mode
state transitions are not available for between power modes. For details about available transitions,
see the Power mode transitions section in the SoC reference manual.

# Typical use case {#ASMCTypUc}

## Enter wait or stop modes {#ASMCWaitStop}

ASMC driver provides APIs to set MCU to different wait modes and stop modes. At
the same time, there are pre function and post function for the modes setting.
The pre function and post function are used for:

1. Disable/enable the interrupt through PRIMASK. In practise, there is such scenario:
the application sets the wakeup interrupt and calls SMC function @ref ASMC_SetPowerModeStop
to set MCU to STOP mode, but the wakeup interrupt happens so quickly that the ISR
completed before the function @ref ASMC_SetPowerModeStop, as a result, the MCU will
enter STOP mode and never be wakeup by the interrupt. In this case, application
could first disable interrupt through PRIMASK, then set the wakeup interrupt and
enter STOP mode. After wakeup, the first thing is enable the interrupt through PRIMASK.
The MCU could still be wakeup when disable interrupt through PRIMASK. The pre and post
functions handle the PRIMASK inside.

@code

ASMC_PreEnterStopModes();

/* Enable the wakeup interrupt here. */

ASMC_SetPowerModeStop(ASMC, kASMC_PartialStop);

ASMC_PostExitStopModes();

@endcode
*/
