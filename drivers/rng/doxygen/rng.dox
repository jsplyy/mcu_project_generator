/*!
@defgroup rng RNG: Random Number Generator
@details The KSDK provides a peripheral driver for the Random Number Generator module of LPC devices.

The Random Number Generator is a hardware module that generates 32-bit random numbers. Internally it is accessed by calling ROM API.
A typical consumer is a pseudo random number generator (PRNG) which can be implemented to achieve both true randomness and cryptographic strength random numbers using the RNG output as its entropy seed.
The data generated by a RNG is intended for direct use by functions that generate secret keys, per-message secrets, random challenges, and other similar quantities used in cryptographic algorithms.


# Get random data from RNG {#RdRNG}
<ol>
<li>RNG_GetRandomData() function gets random data from the RNG module.</li>
</ol>

This example code shows how to get 128-bit random data from the RNG driver.

~~~~~{.c}
{
    uint32_t number;
    uint32_t skip;
    uint32_t data[4];

    /* Initialisation is done automatically by ROM API. */
    
    /* Get Random data */
    for (number = 0; number < 4; number++)
    {
        data[number] = RNG_GetRandomData();
        
        /* Skip next 32 random numbers for better entropy */
        for (skip = 0; skip < 32; skip++)
        {
            RNG_GetRandomData();
        }
    }

    /* Print data */
    PRINTF("0x");
    for (number = 0; number < 4; number++)
    {
        PRINTF("%08X", data[number]);
    }
    PRINTF("\r\n");
}
~~~~~
*/
