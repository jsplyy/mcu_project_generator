/*!
@defgroup epit_driver EPIT Driver
@details The SDK provides a driver for the epit module of i.MX devices.

# Function groups {#EPITFunc}
The epit driver supports the generation of PWM signals, input capture and
setting up the timer match conditions.

## Initialization and deinitialization {#EPITInit}
The function EPIT_Init() initializes the epit with specified configurations. The function
EPIT_GetDefaultConfig() gets the default configurations. The initialization function
configures the restart/free-run mode and input selection when running.

The function EPIT_Deinit() stops the timer and turns off the module clock.

# Typical use case {#GptCase}

## EPIT interrupt example {#EPITInterruptExample}
Set up a channel to trigger a periodic interrupt after every 1 second.
~~~~~{.c}
int main(void)
{
    /* Structure of initialize EPIT */
    epit_config_t epitConfig;

    /* Board pin, clock, debug console init */
    BOARD_InitHardware();

    EPIT_GetDefaultConfig(&epitConfig);

    /* Init EPIT module */
    EPIT_Init(EXAMPLE_EPIT, &epitConfig);

    /* Set timer period */
    EPIT_SetTimerPeriod(EXAMPLE_EPIT, USEC_TO_COUNT(1000000U, EXAMPLE_EPIT_CLK_FREQ) - 1);
    EPIT_SetOutputCompareValue(EXAMPLE_EPIT, 0);

    /* Enable output compare interrupts */
    EPIT_EnableInterrupts(EXAMPLE_EPIT, kEPIT_OutputCompareInterruptEnable);

    /* Enable at the Interrupt */
    EnableIRQ(EPIT_IRQ_ID);

    /* Start Timer */
    PRINTF("\r\nStarting EPIT timer ...");
    EPIT_StartTimer(EXAMPLE_EPIT);

    while (true)
    {
        /* Check whether occur interupt and toggle LED */
        if (true == epitIsrFlag)
        {
            PRINTF("\r\n EPIT interrupt is occured !");
            epitIsrFlag = false;
        }
        else
        {
            __WFI();
        }
    }
}
~~~~~
*/
